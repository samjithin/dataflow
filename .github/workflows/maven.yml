### This workflow will build a Java project with Maven
## For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn clean compile
      
    #- uses: actions/checkout@master
    #- name: SonarQube Scan
    #  uses: kitabisa/sonarqube-action@master
    #  env:
    #      JAVA_HOME: /opt/hostedtoolcache/jdk/8.0.282/x64
    #  with:
    #    host: http://127.0.0.1:9000
    #    login: 55b5f38b5b2e7d0e4325c5381c0a9ca753d56fd3
        
    - name: connect with GCP
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: build and upload to Google Cloud Storage
      run: mvn compile exec:java -Dexec.mainClass=com.google.cloud.teleport.templates.WordCount -Dexec.cleanupDaemonThreads=false -Dexec.args="--project=terraformlearning-284414 --stagingLocation=gs://jit/staging --tempLocation=gs://jit/temp --templateLocation=gs://jit/templates/template-name.json --region=us-central1 --runner=DataflowRunner"

    - id: upload-files
      uses: google-github-actions/upload-cloud-storage@main
      with:
        path: /home/runner/work/dataflow/dataflow/src
        destination: jit/builddata

   
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
   
    - name: Initialize terraform
      run: terraform init
      env: 
         GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
         

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

         
    - name: Terraform apply
      run: terraform apply -auto-approve 
      env: 
         GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
         
      

   
